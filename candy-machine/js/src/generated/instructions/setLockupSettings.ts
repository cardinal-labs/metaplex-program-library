/**
 * This code was GENERATED using the solita package.
 * Please DO NOT EDIT THIS FILE, instead rerun solita to update it or write a wrapper to add functionality.
 *
 * See: https://github.com/metaplex-foundation/solita
 */

import * as beet from '@metaplex-foundation/beet';
import * as web3 from '@solana/web3.js';

/**
 * @category Instructions
 * @category SetLockupSettings
 * @category generated
 */
export type SetLockupSettingsInstructionArgs = {
  lockupType: number;
  number: beet.bignum;
};
/**
 * @category Instructions
 * @category SetLockupSettings
 * @category generated
 */
export const setLockupSettingsStruct = new beet.BeetArgsStruct<
  SetLockupSettingsInstructionArgs & {
    instructionDiscriminator: number[] /* size: 8 */;
  }
>(
  [
    ['instructionDiscriminator', beet.uniformFixedSizeArray(beet.u8, 8)],
    ['lockupType', beet.u8],
    ['number', beet.i64],
  ],
  'SetLockupSettingsInstructionArgs',
);
/**
 * Accounts required by the _setLockupSettings_ instruction
 *
 * @property [_writable_] candyMachine
 * @property [**signer**] authority
 * @property [_writable_] lockupSettings
 * @property [_writable_, **signer**] payer
 * @category Instructions
 * @category SetLockupSettings
 * @category generated
 */
export type SetLockupSettingsInstructionAccounts = {
  candyMachine: web3.PublicKey;
  authority: web3.PublicKey;
  lockupSettings: web3.PublicKey;
  payer: web3.PublicKey;
  systemProgram?: web3.PublicKey;
};

export const setLockupSettingsInstructionDiscriminator = [124, 128, 161, 215, 10, 153, 211, 196];

/**
 * Creates a _SetLockupSettings_ instruction.
 *
 * @param accounts that will be accessed while the instruction is processed
 * @param args to provide as instruction data to the program
 *
 * @category Instructions
 * @category SetLockupSettings
 * @category generated
 */
export function createSetLockupSettingsInstruction(
  accounts: SetLockupSettingsInstructionAccounts,
  args: SetLockupSettingsInstructionArgs,
  programId = new web3.PublicKey('ccmpgw68x3NJmNPePFrTm6TsKCEYUVhF8rEAVL9rSDd'),
) {
  const [data] = setLockupSettingsStruct.serialize({
    instructionDiscriminator: setLockupSettingsInstructionDiscriminator,
    ...args,
  });
  const keys: web3.AccountMeta[] = [
    {
      pubkey: accounts.candyMachine,
      isWritable: true,
      isSigner: false,
    },
    {
      pubkey: accounts.authority,
      isWritable: false,
      isSigner: true,
    },
    {
      pubkey: accounts.lockupSettings,
      isWritable: true,
      isSigner: false,
    },
    {
      pubkey: accounts.payer,
      isWritable: true,
      isSigner: true,
    },
    {
      pubkey: accounts.systemProgram ?? web3.SystemProgram.programId,
      isWritable: false,
      isSigner: false,
    },
  ];

  const ix = new web3.TransactionInstruction({
    programId,
    keys,
    data,
  });
  return ix;
}
